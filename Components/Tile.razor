<td>
	@if (Value > 0)
	{
		<div class="Tile @GenerateColor(Value) @GetMoveAnimationClassName(CurrentMove) @(Merged ? "merged" : "") @(NewTile ? "new-tile" : "")">
			@Value
		</div>
	}
</td>

@code {

	[Parameter] public int Value { get; set; }
	[Parameter] public bool NewTile { get; set; }
	[Parameter] public Move? CurrentMove { get; set; }
	[Parameter] public bool Merged { get; set; }
	[Parameter] public int AnimationFactor { get; set; }

	private string GenerateColor(int value)
	=> value switch
	{
		2 => "tile-yellow",
		4 => "tile-pink",
		8 => "tile-blue",
		16 => "tile-orange",
		32 => "tile-red",
		64 => "tile-purple",
		128 => "tile-black",
		256 => "tile-turquoise",
		512 => "tile-oranger",
		1024 => "tile-green",
		2048 => "tile-bright-pink",
		_ => "tile-blank"
	};

	protected string GetMoveAnimationClassName(Move? move)
	=> move switch
	{
		Move.UP => "slide-Y" + AnimationFactor,
		Move.RIGHT => "slideX" + AnimationFactor,
		Move.DOWN => "slideY" + AnimationFactor,
		Move.LEFT => "slide-X" + AnimationFactor,
		_ => ""
	};
}
